1.BASIC R  

>?plot      The command  to get any help 
Ex - >?plot 
>SUMMARY()   #To get summary of data 
 Can use describe function also 
> lapply(x,mean)        #here x is the data and mean is the function 
> x = data.frame(city = c('delhi','mumbai','chennai'),temp=c(30,32,36))  #example_of_dataframe
> as.matrix(x)     #convert dataframe into matrix
>as.list(x)     #convert data frame into list

>par(mfrow=c(3,1))   #put graphs in 3 row ,1column

##scatter plot  --- agar 2 quantitative data ke beech relation dekhna toh 
plot(mtcars$wt, mtcars$mpg,
  pch = 19,         # Solid circle
  cex = 1.5,        # Make 150% size
  col = "#cc0000",  # Red
  main = "MPG as a Function of Weight of Cars",
  xlab = "Weight (in 1000 pounds)",
  ylab = "MPG")

##









2.IRanges
3.(GRanges)GENOMICRANGES
GRanges is a vector of genomic locations and associated annotations. Each element in the vector is comprised of a sequence name, an interval, a strand, and optional metadata columns  
gr= GRanges(seqnames = c('chr1'),ranges = IRanges(start=c(1,3,5),width = 2))
flank(gr,6)
promoters(gr)
seqlengths(gr)=10
seqinfo(gr)
seqlevels(gr)
gaps(gr)
isDisjoint(gr)
seqnames(gr)
seqnames(gr ) = c('chr1','chr2')                #it gives error first
seqlevels(gr )= c ('chr1','chr2')                  #here we give it info thatit contain 2 level 
seqnames(gr )=c('chr1','chr2','chr1')
sort(gr)   #it can sort gene in accr to chromosome number 
seqlevels(gr)=c('chr2','chr1')
sort(gr)
genome(gr)='fuckgenome'
seqinfo(gr)
------------------------------------------------------------------

findOverlaps(gr,gr1,ignore.strand=TRUE) #WANT TO KNOW OVERLAPS BETWEEN GRANGES 
?findOverlaps
subsetByOverlaps(gr1,gr) #
df9 = data.frame(chr= c('chr1'),start=1:3,end=5:7,width=2,values=rnorm(3))
df9
makeGRangesFromDataFrame(df9)   #makrgrangesfromdataframe 

--------------------------------------------------------------------------
gr=GRanges(seqnames = c('chr1','chr2','chr3'),ranges = IRanges(start = c(1,5,7),end = c(2,6,8)))
seqinfo(gr)
seqlevels(gr)
dropSeqlevels(gr,"chr3",pruning.mode = 'coarse') #to drop a sequence level from GRrange
keepSeqlevels(gr,'chr3',pruning.mode = 'coarse') #to keep only a sequnce level in GRange 

4. ANNOTATION HUB 

ah=AnnotationHub()
unique(t$dataprovider) #big players in comp biology 
unique(t$species) #uniques specis in data 
ah=subset(t,species=='Homo sapiens')  #in the set filter out all data of homosapiens 
unique(ah$species)
query(ah,c('h3k4me3')) #data only on h3k4me3 histone modification show alot 
query(ah,c('h3k4me3','gm12878'))  #data on h3k4me3 histone modification of 'gm12878' cell line 
ah2=display(ah)   #it display the data 



